{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "ot1k3p57qv7wi"
  },
  "info": {
    "title": "spectrAPI",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.opendesign.dev",
      "description": ""
    }
  ],
  "paths": {
    "/designs/{design_id}/artboards/{artboard_id}/content": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "design_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "artboard_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "object",
                      "description": "Информция о версиях инструментов, файлы которых были импортированы. Обязательно должен быть параметр octopus-common и один из дополнительных праметров с версией интструмента. Все версии возвращаются в вивде сементаческой версионности",
                      "properties": {
                        "octopus-common": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия octopus\n* "
                        },
                        "octopus-sketch": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия инструмента sketch для адаптера octopus"
                        },
                        "octopus-figma": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия инструмента figma для адаптера octopus"
                        },
                        "octopus-ps": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия инструмента photoshop для адаптера octopus"
                        },
                        "octopus-xd": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия инструмента adobe xd для адаптера octopus"
                        },
                        "octopus-ai": {
                          "type": "string",
                          "example": "1.2.3",
                          "description": "Версия инструмента adobe illustrator для адаптера octopus"
                        }
                      },
                      "required": [
                        "octopus-common"
                      ]
                    },
                    "timeStamp": {
                      "type": "integer",
                      "description": "Время создания документа octopus. Возвращается как в виде временной метки Unix",
                      "example": 1621946352725
                    },
                    "bounds": {
                      "type": "object",
                      "deprecated": true,
                      "description": "Границы фрейма. Верхняя (top) / левая (left) граница всегда равны 0, в объекте возвращаются значения только ширины (width) и высоты (height) документа.\n\n-- Не используем. Ширину и высоту возьмем из массива layers[ ] для объекта с слоем: \"<ИД фрейма>:background\"",
                      "properties": {
                        "top": {
                          "$ref": "#/components/schemas/top"
                        },
                        "left": {
                          "$ref": "#/components/schemas/left"
                        },
                        "bottom": {
                          "$ref": "#/components/schemas/bottom"
                        },
                        "right": {
                          "$ref": "#/components/schemas/right"
                        },
                        "hight": {
                          "$ref": "#/components/schemas/height"
                        },
                        "weight": {
                          "$ref": "#/components/schemas/weight"
                        }
                      },
                      "required": [
                        "top",
                        "left",
                        "bottom",
                        "right",
                        "hight",
                        "weight"
                      ]
                    },
                    "symbolID": {
                      "type": "string",
                      "description": "ИД фрейма в документе octopus. Возвращается если фрейм фигмы является компонентом\n\n-- Не используем",
                      "deprecated": true
                    },
                    "isSymbolMaster": {
                      "type": "boolean",
                      "description": "Флаг, являетсяя ли фрейм компонентом:\n* true - является компонентом (мастером);\n* false - не является\n\n-- Параметр возвращается вместе с параметром symbolID;\n-- Для всех фреймов (компонентов) фигмы параметр будет возвращаться только со значением true"
                    },
                    "frame": {
                      "type": "object",
                      "description": "Позиция фрейма на Рабочей области в фигма",
                      "properties": {
                        "x": {
                          "type": "number",
                          "description": "Горизонтальное положение Рабочей области (по оси X)",
                          "format": "float",
                          "default": 0,
                          "example": 9.99
                        },
                        "y": {
                          "type": "number",
                          "description": "Вертикальное положение Рабочей области (по оси Y)",
                          "format": "float",
                          "default": 0,
                          "example": 9.99
                        }
                      },
                      "required": [
                        "x",
                        "y"
                      ]
                    },
                    "backgroundColor": {
                      "$ref": "#/components/schemas/color"
                    },
                    "hasBackgroundColor": {
                      "type": "boolean",
                      "description": "Флаг указывающий, нужно ли применять цвет фона, полученный из объекта backgroundColor, к Рабочей области:\n* true - применить;\n* false - не применять\n\n-- Не используем",
                      "deprecated": true
                    },
                    "guides": {
                      "type": "object",
                      "description": "горизонтальные и вертикальные направляющие линейки Рабочей области\n\n-- Не возвращается для фигмы;\n-- Не используем. Будем использовать стандартную линейку с заданным шагом и размером по умолчанию: шаг 1 пиксель и размер по ширине и высоте от -131072 до 131072",
                      "deprecated": true,
                      "properties": {
                        "x": {
                          "type": "array",
                          "description": "Массив горизонтальных направляющих линейки. Может быть пустой",
                          "items": {
                            "type": "number"
                          }
                        },
                        "y": {
                          "type": "array",
                          "description": "Массив вертикальных направляющих линейки. Может быть пустой",
                          "items": {
                            "type": "number"
                          }
                        }
                      },
                      "required": [
                        "x",
                        "y"
                      ]
                    },
                    "includeBackgroundColorInInstance": {
                      "type": "number",
                      "deprecated": true,
                      "default": 0,
                      "enum": [
                        0,
                        1
                      ],
                      "description": "Использование цвета фона в экземпляра\n\n-- Не используем;\n-- Не возвращается для фигмы"
                    },
                    "exportables": {
                      "type": "array",
                      "description": "Массив дескрипторов экспорта. Каждая запись относится к слайсу или слою\n\n-- Не возвращается и не используется для фигмы",
                      "deprecated": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "LAYER",
                              "SLICE"
                            ],
                            "description": "Тип дескриптора"
                          },
                          "location": {
                            "type": "object",
                            "description": "Положение дескриптора экспорта. Для определения положения, в случае слайса использются значения парметров parent и index, в случае слоя только id",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ИД слоя"
                              },
                              "parent": {
                                "type": "string",
                                "description": "ИД родительского слоя"
                              },
                              "index": {
                                "type": "number",
                                "description": "Индекс слоя в родительском массиве слоев"
                              }
                            }
                          },
                          "trimTransparentPixels": {
                            "type": "boolean",
                            "description": "Флаг, обозначающий, следует ли обрезать прозрачные пиксели при экспорте:\n* true - обрезать пиксели;\n* false - не обрезать"
                          },
                          "background": {
                            "type": "object",
                            "description": "Фон экспорта",
                            "properties": {
                              "value": {
                                "$ref": "#/components/schemas/color"
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "* true - если фон включен;\n* false - выключен"
                              }
                            }
                          },
                          "bounds": {
                            "type": "object",
                            "description": "Границы дескрипторов",
                            "properties": {
                              "top": {
                                "$ref": "#/components/schemas/top"
                              },
                              "left": {
                                "$ref": "#/components/schemas/left"
                              },
                              "bottom": {
                                "$ref": "#/components/schemas/bottom"
                              },
                              "right": {
                                "$ref": "#/components/schemas/right"
                              },
                              "height": {
                                "$ref": "#/components/schemas/height"
                              },
                              "weight": {
                                "$ref": "#/components/schemas/weight"
                              }
                            },
                            "required": [
                              "top",
                              "left",
                              "bottom",
                              "right",
                              "height",
                              "weight"
                            ]
                          },
                          "limitTo": {
                            "type": "string",
                            "description": "Что должно быть включено в экспорт:\n* ARTBOARD - вся Рабочая область;\n* SELF - сам объект",
                            "enum": [
                              "ARTBOARD",
                              "SELF"
                            ]
                          },
                          "formats": {
                            "type": "array",
                            "description": "Массив, описывающий форматы экспорта",
                            "items": {
                              "type": "object",
                              "properties": {
                                "naming": {
                                  "type": "object",
                                  "description": "Значение префикса / суффикса названия экспорта",
                                  "properties": {
                                    "scheme": {
                                      "type": "string",
                                      "description": "Тип наименования",
                                      "enum": [
                                        "PREFIX",
                                        "SUFFIX"
                                      ]
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Значение перфикса или суффикса"
                                    }
                                  }
                                },
                                "format": {
                                  "type": "string",
                                  "description": "Формат экспорта",
                                  "enum": [
                                    "PNG",
                                    "JPG",
                                    "TIFF",
                                    "WEBP",
                                    "PDF",
                                    "EPS",
                                    "SVG"
                                  ]
                                },
                                "size": {
                                  "type": "object",
                                  "description": "Ограничение изменения размера",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "enum": [
                                        "SCALE",
                                        "WIDTH",
                                        "HEIGHT"
                                      ],
                                      "description": "Тип изменения размера результата экспорта (масштабировать или изменять размер с фиксированной шириной или высотой)"
                                    },
                                    "value": {
                                      "type": "number",
                                      "description": "Значение ограничения"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "format"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "flow": {
                      "type": "object",
                      "description": "Взаимодействие между фреймами (создание прототипов). Для фигмы реализовано частично\n\n-- Пока не используем. Для 2-го этапа",
                      "deprecated": true,
                      "properties": {
                        "initial": {
                          "type": "boolean",
                          "description": "Флаг, является ли фрейм родительским фреймом для всего прототипа дизайна:\n* true - является;\n* false - нет\n\n-- Для фремов фигмы всегда приходит false"
                        },
                        "interactions": {
                          "type": "array",
                          "description": "Массив взаимодествий фреймов",
                          "items": {
                            "type": "object",
                            "properties": {
                              "destination": {
                                "type": "object",
                                "description": "Описание взаимодействия",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "id",
                                      "relative"
                                    ],
                                    "description": "Тип: ИД фрейма или значение направления"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "ИД фрейма назначени"
                                  },
                                  "relativeValue": {
                                    "type": "string",
                                    "enum": [
                                      "back"
                                    ],
                                    "description": "Значение направления"
                                  }
                                }
                              },
                              "animation": {
                                "type": "object",
                                "description": "Десскриптор свойств анимации взаимодействия",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Тип анимации взимодествия",
                                    "enum": [
                                      "DISSOLVE",
                                      "MOVE_UP",
                                      "MOVE_DOWN",
                                      "MOVE_LEFT",
                                      "MOVE_RIGHT",
                                      "PUSH_UP",
                                      "PUSH_DOWN",
                                      "PUSH_LEFT",
                                      "PUSH_RIGHT",
                                      "SLIDE_UP",
                                      "SLIDE_DOWN",
                                      "SLIDE_LEFT",
                                      "SLIDE_RIGHT",
                                      "NONE"
                                    ]
                                  },
                                  "easing": {
                                    "type": "string",
                                    "enum": [
                                      "EASE_IN",
                                      "EASE_OUT",
                                      "EASE_IN_OUT",
                                      "NON"
                                    ],
                                    "description": "Тип плавной анимации"
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "Продолжительность анимации (количество миллисекунд)"
                                  },
                                  "delay": {
                                    "type": "integer",
                                    "description": "Время задержки перед анимацией (количество миллисекунд)"
                                  }
                                }
                              },
                              "bounds": {
                                "type": "object",
                                "description": "Границы области взаиможействия",
                                "required": [
                                  "top",
                                  "left",
                                  "weight",
                                  "height",
                                  "right",
                                  "bottom"
                                ],
                                "properties": {
                                  "top": {
                                    "$ref": ""
                                  },
                                  "left": {
                                    "$ref": "#/components/schemas/left"
                                  },
                                  "weight": {
                                    "$ref": "#/components/schemas/weight"
                                  },
                                  "height": {
                                    "$ref": "#/components/schemas/height"
                                  },
                                  "right": {
                                    "$ref": "#/components/schemas/right"
                                  },
                                  "bottom": {
                                    "$ref": "#/components/schemas/bottom"
                                  }
                                }
                              },
                              "preserveScroll": {
                                "type": "boolean",
                                "description": "Если true, то монтажная область должна сохранять текущее положение прокрутки. Иначе false"
                              },
                              "trigger": {
                                "type": "string",
                                "description": "Триггер (например, жест), который инициирует взаимодействие"
                              },
                              "ownerId": {
                                "type": "string",
                                "description": "ИД слоя, из которого происходит взаимодействие"
                              }
                            },
                            "required": [
                              "destination",
                              "animation",
                              "bounds"
                            ]
                          }
                        }
                      }
                    },
                    "smartLayout": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Умная компоновка\n\n-- Не используем (используется только для Sketch);\n-- Не возвращается для figma",
                      "enum": [
                        "RIGHT_TO_LEFT",
                        "HORIZONTAL_CENTER",
                        "TOP_TO_BOTTOM",
                        "BOTTOM_TO_TOP",
                        "HORIZONTAL_CENTER",
                        "LEFT_TO_RIGHT"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Наименование фрейма"
                    },
                    "id": {
                      "type": "string",
                      "description": "ИД фрейма"
                    },
                    "layoutGrid": {
                      "type": "array",
                      "description": "Компоновочная сетка",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Тип сетки",
                            "enum": [
                              "grid",
                              "column",
                              "row"
                            ]
                          },
                          "size": {
                            "type": "number",
                            "description": "Для type = \"grid\", это расстояние между линиями сетки по горизонтали и вертикали.\nДля type = \"column\" / \"row\", это ширина линий сетки",
                            "format": "float",
                            "example": 9.99,
                            "default": 0
                          },
                          "thickEvery": {
                            "type": "number",
                            "description": "Толщина линий сетки, для type = \"grid\"\n\n-- Параметр возвращается, если type = \"grid\""
                          },
                          "color": {
                            "$ref": "#/components/schemas/color"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Флаг, отвечающий за видимость сетки:\n* true - сетку нужно показывать;\n* false - сетка должна быть скрыта"
                          },
                          "count": {
                            "type": "number",
                            "description": "Количество линий сетки, для type = \"column\" / \"row\"\n\n-- Параметр возвращается только для type = \"column\" / \"row\"\n-- Если в фигма установлено значение \"auto\", то в параметре возвращается \"0\""
                          },
                          "drawEveryLine": {
                            "type": "boolean",
                            "description": "Флаг, нужно отрисовывать все линии. Возвращается только для type = \"raw\"\n\n-- Не используем. Для фигмы всегда false",
                            "deprecated": true
                          },
                          "outerOutline": {
                            "type": "boolean",
                            "description": "Флаг, нужно отрисовывать внешние линии. Возвращается только для type = \"column\"\n\n-- Не используем. Для фигмы всегда false",
                            "deprecated": true
                          },
                          "bounds": {
                            "type": "object",
                            "description": "Границы сетки по отношению к фрейму. Объект возвращается только для type = \"column\" / \"raw\"\n\n-- Используя значения, полученные в параметрам объекта, можно расчитать отступ и расстояение между линиями сетки (как в фигме)",
                            "properties": {
                              "top": {
                                "$ref": "#/components/schemas/top"
                              },
                              "left": {
                                "$ref": "#/components/schemas/left"
                              },
                              "weight": {
                                "$ref": "#/components/schemas/weight"
                              },
                              "height": {
                                "$ref": "#/components/schemas/height"
                              },
                              "bottom": {
                                "$ref": "#/components/schemas/bottom"
                              },
                              "right": {
                                "$ref": "#/components/schemas/right"
                              }
                            },
                            "required": [
                              "top",
                              "left",
                              "weight",
                              "height",
                              "bottom",
                              "right"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "size",
                          "color",
                          "enabled"
                        ]
                      }
                    },
                    "layers": {
                      "type": "array",
                      "description": "Слои фрейма",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": ""
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "id",
                    "layers"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-designs-design_id-artboards-artboard_id-content",
        "description": "Получение информации о содержимом Рабочей области",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "design_id",
            "required": true,
            "description": "ИД импортированного файла"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "artboard_id",
            "required": true,
            "description": "ИД фрейма в импортированном файле"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "top": {
        "type": "number",
        "title": "top",
        "x-stoplight": {
          "id": "oet4m14nzd64s"
        },
        "description": "Верхняя граница (X)",
        "format": "float",
        "default": 0,
        "example": 9.99
      },
      "bottom": {
        "type": "number",
        "title": "bottom",
        "x-stoplight": {
          "id": "qw0kkrh4xmee4"
        },
        "format": "float",
        "default": 0,
        "example": 9.99,
        "description": "Нижняя граница (top + height)"
      },
      "left": {
        "type": "number",
        "title": "left",
        "x-stoplight": {
          "id": "8x2zew2xaoy94"
        },
        "description": "Левая граница (Y)",
        "format": "float",
        "default": 0,
        "example": 9.99
      },
      "right": {
        "type": "number",
        "title": "right",
        "x-stoplight": {
          "id": "h0rt1xbpxj7eb"
        },
        "description": "Првая граница (left + weight)",
        "format": "float",
        "default": 0,
        "example": 9.99
      },
      "height": {
        "type": "number",
        "title": "height",
        "x-stoplight": {
          "id": "dopvzf7ugk96t"
        },
        "description": "Высота",
        "format": "float",
        "default": 0,
        "example": 9.99
      },
      "weight": {
        "type": "number",
        "title": "weight",
        "x-stoplight": {
          "id": "g07n26xzl67ws"
        },
        "description": "Ширина",
        "format": "float",
        "default": 0,
        "example": 9.99
      },
      "color": {
        "title": "color",
        "x-stoplight": {
          "id": "ego30so2z2daw"
        },
        "type": "object",
        "description": "Цветовой дескриптор\n\n-- Полученные значения RGB необходимо преобразовать в режим цветового кодирования HEX.\nЗначение альфа канала в проценты (a * 100);\n-- Для фрейма в параметре backgroundColor будет всегда: \n{\n  \"r\": 0,\n  \"g\": 0,\n  \"b\": 0,\n  \"a\": 0\n}",
        "x-internal": false,
        "properties": {
          "r": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "Цветовой канал красного цвета"
          },
          "g": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "Цветовой канал зеленого цвета"
          },
          "b": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "Цветовой канал синего цвета"
          },
          "a": {
            "type": "number",
            "format": "float",
            "default": 1,
            "example": 0.99,
            "minimum": 0,
            "maximum": 1,
            "description": "Альфа канал\n\n--Для Спектра необходимо перевести полученное значение в %"
          }
        },
        "required": [
          "r",
          "g",
          "b",
          "a"
        ]
      },
      "layer": {
        "title": "layer",
        "x-stoplight": {
          "id": "vf3nbwzn5q7qh"
        },
        "type": "object",
        "description": "Общее описание слоя",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД слоя",
            "example": "3:3"
          },
          "name": {
            "type": "string",
            "description": "Наименование слоя"
          },
          "origin": {
            "type": "string",
            "description": "Инструмент, в котором был создан слой",
            "enum": [
              "sketch",
              "xd",
              "photoshop",
              "figma",
              "illustrator"
            ]
          },
          "visible": {
            "type": "boolean",
            "default": true,
            "description": "Флаг видимости слоя на Рабочей области:\n* true - слой виден (возвращается по умолчанию);\n* false - слой скрыт"
          },
          "bounds": {
            "type": "object",
            "description": "Границы слоя (без эффектов)",
            "properties": {
              "top": {
                "$ref": "#/components/schemas/top"
              },
              "left": {
                "$ref": "#/components/schemas/left"
              },
              "weight": {
                "$ref": "#/components/schemas/weight"
              },
              "height": {
                "$ref": "#/components/schemas/height"
              },
              "right": {
                "$ref": "#/components/schemas/right"
              },
              "bottom": {
                "$ref": "#/components/schemas/bottom"
              }
            },
            "required": [
              "top",
              "left",
              "weight",
              "height",
              "right",
              "bottom"
            ]
          },
          "shape": {
            "$ref": "#/components/schemas/shape"
          },
          "clipped": {
            "type": "boolean",
            "description": "Флаг, указывающий скрывается ли текущий слой другим слоем:\n* true: скрывается (при этом должен возвращатьсяпараметр maskedBy);\n* false: не скрывается"
          },
          "maskedBy": {
            "type": "string",
            "description": "ИД слоя, который является маской для текущего слоя"
          },
          "maskType": {
            "type": "string",
            "description": "Тип маски.\nДля figma возвращаются два из доступных значений:\n* alpha: если для маски в figma отключена настройка \"Использовать контур формы\";\n* figmaOutline: если для маски в figma включена настройка \"Использовать контур формы\"",
            "enum": [
              "alpha",
              "inverse-luminosity",
              "luminosity",
              "outline",
              "psd",
              "svg",
              "figmaOutline"
            ]
          },
          "bitmapMask": {
            "type": "object",
            "deprecated": true,
            "description": "Маска растрового изображения. Используется только для инструмента Photoshop\n\n-- Не используем;\n-- Не возвращается для инструмента figma",
            "properties": {
              "bounds": {
                "type": "object",
                "description": "Границы растровой маски. Если отсутствует, вместо него используется значение layer.bitmap.",
                "properties": {
                  "top": {
                    "$ref": "#/components/schemas/top"
                  },
                  "left": {
                    "$ref": "#/components/schemas/left"
                  },
                  "weight": {
                    "$ref": "#/components/schemas/weight"
                  },
                  "height": {
                    "$ref": "#/components/schemas/height"
                  },
                  "right": {
                    "$ref": "#/components/schemas/right"
                  },
                  "bottom": {
                    "$ref": "#/components/schemas/bottom"
                  }
                },
                "required": [
                  "top",
                  "left",
                  "weight",
                  "height",
                  "right",
                  "bottom"
                ]
              },
              "filename": {
                "type": "string",
                "description": "Ссылка на URI файла растровой маски (URL или относительное имя файла)"
              },
              "enabled": {
                "type": "boolean",
                "description": "Флаг, указывающий будет ли приминена маска:\n* true: будет применена;\n* false: не применена"
              },
              "extendWithWhite": {
                "type": "boolean",
                "description": "Если значение \"true\", то растровое изображение маски должно быть изменено в соответствии с размером слоя, который оно маскирует, расширенная область должна быть заполнена сплошным белым цветом"
              }
            },
            "required": [
              "filename"
            ]
          },
          "clipBounds": {
            "type": "object",
            "description": "Ограничивающие границы, которые можно использовать вместо прямоугольной ограничивающей маски того же положения и размера\n\n-- Не используется;\n-- Не возвращается для инструмента figma",
            "deprecated": true,
            "properties": {
              "top": {
                "$ref": "#/components/schemas/top"
              },
              "left": {
                "$ref": "#/components/schemas/left"
              },
              "weight": {
                "$ref": "#/components/schemas/weight"
              },
              "right": {
                "$ref": "#/components/schemas/right"
              },
              "bottom": {
                "$ref": "#/components/schemas/bottom"
              },
              "height": {
                "$ref": "#/components/schemas/height"
              }
            },
            "required": [
              "top",
              "left",
              "weight",
              "right",
              "bottom",
              "height"
            ]
          },
          "opacity": {
            "type": "number",
            "format": "float",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "description": "Уровень непрозрачности слоя: 1 - полностью непрозрачный, 0 - полностью прозрачный. Описывает значение альфа-канала (непрозрачности)"
          },
          "fillOpacity": {
            "type": "number",
            "format": "float",
            "deprecated": true,
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "description": "Уровень непрозрачности заливки слоя"
          }
        },
        "required": [
          "id"
        ]
      },
      "shape": {
        "title": "shape",
        "x-stoplight": {
          "id": "wad056xttdasi"
        },
        "type": "object",
        "description": "Дескриптор формы",
        "properties": {
          "paths": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Если форма является векторной маской, то данный флаг указывает, включена маска или нет:\n* true - маска включена (по умолчанию);\n* false - выключена\n\n-- Не используется для слоев фигмы",
            "deprecated": true
          },
          "windingRule": {
            "type": "string",
            "enum": [
              "on-zero",
              "even-odd"
            ],
            "default": "even-odd",
            "description": "Правила взаимодействия контуров объектов, которые пересекаются:\n* non-zero: заливка по правилу ненулевого направления;\n* even-odd: заливка по правилу четности и нечетности\n\n-- Можно не использовать. Для фигмы всегда возвращается одно из доступных значений данного параметра: \"non-zero\"",
            "deprecated": true
          }
        },
        "required": [
          "paths"
        ]
      },
      "shapePath": {
        "title": "shapePath",
        "x-stoplight": {
          "id": "c2bn6x5k7w4p1"
        },
        "type": "array",
        "description": "Описение единого вектороного пути",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "rect",
                "ellipse",
                "path"
              ],
              "description": "Тип формы, которую представляет векторный путь. Если пустой, то форма неизвестна для octopus\n\n-- Можно не использовать. Для фигмы в данном параметре приходит одно из доступных значени: \"path\"",
              "deprecated": true
            },
            "booleanOperation": {
              "type": "string",
              "description": "Логичечкая операция, объединяющая текущий и следующий путь в массиве\n\n-- Можно не использовать. Для в данном параметре всегда возвращается значение: \"none\" (по умолчанию)",
              "enum": [
                "none",
                "exclusion",
                "intersection",
                "subtraction",
                "union"
              ],
              "default": "none",
              "deprecated": true
            },
            "subpaths": {
              "type": "string",
              "description": "Массив подпутей (контуров), из которых состоит основной путь"
            }
          },
          "required": [
            "subpaths"
          ]
        }
      },
      "shapeSubpath": {
        "title": "shapeSubpath",
        "x-stoplight": {
          "id": "pok4gdtm9bp3q"
        },
        "type": "object",
        "description": "Дескриптор одного контура",
        "properties": {
          "closed": {
            "type": "boolean",
            "description": "Флаг, указывающий открыт или закрыт путь:\n* true - путь закрыт;\n* false - путь закрыт\n\n-- Можно не использщовать. Для фигмы всегда возвращается: \"true\""
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shapePath"
            }
          }
        }
      }
    },
    "parameters": {}
  }
}