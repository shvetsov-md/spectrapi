variables:
  REGISTRY_AUTH_FILE: /etc/containers/auth.json
  APP_NAME: api-docs
  REGISTRY: registry.apps.okd.stage.digital.rt.ru
  NAMESPACE: spectr
  APP_IMAGE: $REGISTRY/$NAMESPACE/$APP_NAME
  TEMP_IMAGE_TAG: temp_$CI_PIPELINE_ID
image: '$REGISTRY/openshift/cli:latest'
stages:
  - docker
  - deploy
  - clean
.docker-package:
  stage: docker
  variables:
    KUBERNETES_CPU_REQUEST: '1'
    KUBERNETES_CPU_LIMIT: '1'
    KUBERNETES_MEMORY_REQUEST: 2Gi
    KUBERNETES_MEMORY_LIMIT: 2Gi
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: builder
  image: '$REGISTRY/openshift/kaniko:openshift'
  retry: 2
  script:
    - cat /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt >> $SSL_CERT_DIR/ca-certificates.crt
    - 'echo "{\"auths\":{\"$REGISTRY\":{\"username\":\"serviceaccount\",\"password\":\"$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\"}}}" > $DOCKER_CONFIG/config.json'
    - '/kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $APP_IMAGE:$TEMP_IMAGE_TAG --cache=true --cache-repo ${APP_IMAGE}-cache'
docker-build-staging:
  extends: .docker-package
  only:
    - master
  tags:
    - spectr
    - private
    - okd
deploy-staging:
  stage: deploy
  retry: 2
  script:
    - 'oc tag $NAMESPACE/$APP_NAME:$TEMP_IMAGE_TAG $NAMESPACE/$APP_NAME:latest'
  only:
    - master
  tags:
    - spectr
    - private
    - okd
.clean-tmp-images:
  stage: clean
  script:
    - 'oc delete istag/$APP_NAME:$TEMP_IMAGE_TAG -n $NAMESPACE'
clean-staging:
  extends: .clean-tmp-images
  only:
    - master
  tags:
    - spectr
    - private
    - okd
  when: always
